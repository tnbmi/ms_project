//*****************************************************************************
//
// 更新管理リスト [updateList.cpp]
// Author : MAI TANABE
//
//*****************************************************************************

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// インクルードファイル
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#include "updateList.h"
#include "..\..\common\safe.h"

#include "..\..\objectBase\objectBase.h"

//=============================================================================
// コンストラクタ
//=============================================================================
UpdateList::UpdateList(void) : List(1)
{
	//----------------------------
	// メンバー初期化
	//----------------------------
	m_top[0] = nullptr;
	m_end[0] = nullptr;
}

//=============================================================================
// デストラクタ
//=============================================================================
UpdateList::~UpdateList(void)
{
	List::~List();
}

//=============================================================================
// 生成
//=============================================================================
bool UpdateList::Create(UpdateList** outPointer)
{
	UpdateList* pointer = new UpdateList();

	*outPointer = pointer;
	return true;
}

//=============================================================================
// リンク
//=============================================================================
void UpdateList::Link(ObjectBase* object)
{
	//----------------------------
	// 更新リストを設定
	//----------------------------
	object->updateList(this);

	//----------------------------
	// 前オブジェクトの設定
	//----------------------------
	if(m_top[0] == nullptr)
	{
		// 先頭に設定
		m_top[0] = object;
		object->updatePrev(nullptr);
	}
	else
	{
		// 前オブジェクトから連結
		m_end[0]->updateNext(object);
		object->updatePrev(m_end[0]);
	}

	//----------------------------
	// 次オブジェクトの設定
	//----------------------------
	object->updateNext(nullptr);

	//----------------------------
	// 終端オブジェクトの設定
	//----------------------------
	m_end[0] = object;
}

//=============================================================================
// リンク解除
//=============================================================================
void UpdateList::UnLink(ObjectBase* object)
{
	ObjectBase* prev = object->updatePrev();
	ObjectBase* next = object->updateNext();

	//----------------------------
	// 前オブジェクトの再設定
	//----------------------------
	if(prev != nullptr)
	{
		// 前オブジェクトに次オブジェクトを連結
		prev->updateNext(next);
	}
	else
	{
		// 先頭オブジェクトを変更
		m_top[0] = next;

		if(m_top[0] != nullptr)
			// 先頭の前をnullptrに
			m_top[0]->updatePrev(nullptr);
	}

	//----------------------------
	// 次オブジェクトの再設定
	//----------------------------
	if(next != nullptr)
	{
		// 次オブジェクトに前オブジェクトを連結
		next->updatePrev(prev);
	}
	else
	{
		// 終端オブジェクトを変更
		m_end[0] = prev;

		if(m_end != nullptr)
			// 終端をnullptrに
			m_end[0]->updateNext(nullptr);
	}

	//----------------------------
	// 更新リストを解除
	//----------------------------
	object->updateList(nullptr);
}

//=============================================================================
// 全オブジェクトの更新
//=============================================================================
void UpdateList::AllUpdate(void)
{
	ObjectBase* cur	 = m_top[0];
	ObjectBase* next = nullptr;

	while(cur)
	{
		next = cur->updateNext();

		cur->Update();

		if(cur->deleteFlg())
			SafeFinalizeDelete(cur);

		cur = next;
	}
}

// EOF
