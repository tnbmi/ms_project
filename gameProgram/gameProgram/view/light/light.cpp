//*****************************************************************************
//
// ライト設定 [light.cpp]
// Author : MAI TANABE
//
//*****************************************************************************

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// インクルードファイル
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#include "light.h"

//=============================================================================
// コンストラクタ
//=============================================================================
Light::Light(LPDIRECT3DDEVICE9 device)
{
	//----------------------------
	// メンバー初期化
	//----------------------------
	m_device = device;
	m_vsc	 = nullptr;

	// 平行光源
	m_dirLight.vector	= D3DXVECTOR3(0.0f, 1.0f, 0.0f);
	m_dirLight.diffuse	= D3DXCOLOR(1.0f, 0.0f, 0.0f, 1.0f);
	m_dirLight.ambient	= D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);
	D3DXVec3Normalize(&m_dirLight.vector, &m_dirLight.vector);
}

//=============================================================================
// デストラクタ
//=============================================================================
Light::~Light(void)
{
}

//=============================================================================
// 生成
//=============================================================================
bool Light::Create(Light** outPointer, LPDIRECT3DDEVICE9 device, LPD3DXCONSTANTTABLE vsc)
{
	Light* pointer = new Light(device);
	if(!pointer->Initialize(vsc))
		return false;

	*outPointer = pointer;
	return true;
}

//=============================================================================
// 初期化
//=============================================================================
bool Light::Initialize(LPD3DXCONSTANTTABLE vsc)
{
	m_vsc = vsc;

	return true;
}

//=============================================================================
// 終了
//=============================================================================
void Light::Finalize(void)
{
}

//=============================================================================
// 更新
//=============================================================================
void Light::Update(void)
{
}

//=============================================================================
// ライト設定
//=============================================================================
void Light::SetLight(void)
{
	// 平行光源の設定
	m_vsc->SetFloatArray(m_device, "gDirLightVector", (float*)&m_dirLight.vector, 3);
	m_vsc->SetVector(m_device, "gDirLightDiffuse", (D3DXVECTOR4*)&m_dirLight.diffuse);
	m_vsc->SetVector(m_device, "gDirLightAmbient", (D3DXVECTOR4*)&m_dirLight.ambient);
}

// EOF
