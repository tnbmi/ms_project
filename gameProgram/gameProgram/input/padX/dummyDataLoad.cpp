//*****************************************************************************
//
// ダミー入力データのロード [dummyDataLoad.cpp]
// Author : MAI TANABE
//
//*****************************************************************************

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// インクルードファイル
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#include "dummyDataLoad.h"
#include "..\..\common\safe.h"

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// マクロ定義
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//=============================================================================
// コンストラクタ
//=============================================================================
DummyDataLoad::DummyDataLoad(int patternMax)
{
	//----------------------------
	// メンバー初期化
	//----------------------------
	m_patternMax = patternMax;
	int size	 = patternMax * 10;

	m_commandData = new unsigned int[size];

	for(int cnt = 0; cnt < size; ++cnt)
		m_commandData[cnt] = 0;
}

//=============================================================================
// デストラクタ
//=============================================================================
DummyDataLoad::~DummyDataLoad(void)
{
	SafeDeleteArray(m_commandData);
}

//=============================================================================
// 生成
//=============================================================================
bool DummyDataLoad::Create(DummyDataLoad** outPointer, int patternMax, unsigned int* commandData)
{
	DummyDataLoad* pointer = new DummyDataLoad(patternMax);
	if(!pointer->Initialize(commandData))
		return false;

	*outPointer = pointer;
	return true;
}

//=============================================================================
// 初期化
//=============================================================================
bool DummyDataLoad::Initialize(unsigned int* commandData)
{
	m_commandData = commandData;

	return true;
}

//=============================================================================
// 終了
//=============================================================================
void DummyDataLoad::Finalize(void)
{
}

// EOF
