//*****************************************************************************
//
// スレッド [thread.cpp]
// Author : KAZUMA OOIGAWA
//
//*****************************************************************************

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// インクルードファイル
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#include "thread.h"
#include <process.h>
//=============================================================================
// コンストラクタ
//=============================================================================
Thread::Thread(void)
{
	//----------------------------
	// メンバー初期化
	//----------------------------
}

//=============================================================================
// デストラクタ
//=============================================================================
Thread::~Thread(void)
{
}

//=============================================================================
// 生成
//=============================================================================
unsigned int Thread::Create(void *function)
{
	unsigned int threadID;

	//スレッド生成
	m_thread = (HANDLE) _beginthreadex( NULL , 0 , (unsigned int( __stdcall* )(void*))function , NULL , 0 , &threadID);

	//----------------------------
	// 返り値
	//----------------------------

	//スレッド生成チェック
	if( m_thread == 0 )
	{
		return 0;
	}

	//成功
	return (unsigned int)threadID;
}

//=============================================================================
// 終了
//=============================================================================
bool Thread::threadend(void)
{
	HRESULT Result;

	//スレッド終了確認
	if( m_thread != nullptr )
	{
		// スレッド内の処理の終了待ち
		WaitForSingleObject( m_thread , INFINITE );

		// スレッド破棄
		Result = CloseHandle( m_thread );
	}
	else
	{
		//返り値
		return false;
	}
	return SUCCEEDED(Result);
}
// EOF
